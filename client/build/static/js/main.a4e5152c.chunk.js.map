{"version":3,"sources":["components/date/Date.js","components/search/Search.js","components/accordion/Accordion.js","components/tabs/Tabs.js","components/bar_graph_single/BarGraphSingle.js","pages/game_report_page/GameReportPage.js","components/bar_graph_total/BarGraphTotal.js","pages/team_report_page/TeamReportPage.js","pages/player_report_page/PlayerReportPage.js","components/menu/Menu.js","App.js","serviceWorker.js","index.js"],"names":["MaterialUIPickers","date","onChangeDate","React","useState","setSelectedDate","utils","DateFnsUtils","Grid","container","justify","disableToolbar","variant","format","margin","id","label","value","onChange","KeyboardButtonProps","Search","event","values","props","updateFunction","updateVariable","Autocomplete","options","this","data","getOptionLabel","optionFunc","style","width","defaultValue","disabled","isDisabled","renderInput","params","TextField","Component","withRouter","useStyles","makeStyles","theme","root","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","color","palette","text","secondary","header","display","metricHeading","getDrives","onClickMetric","drives_diff","class","onClick","Number","toFixed","Icon","className","Math","abs","getCatchShoot","catch_shoot_pts_diff","getPullUp","pull_up_pts_diff","getOpenThrees","fg3_pts_diff_open","getContestedThrees","fg3_pts_diff_tight","ControlledAccordions","teamReportData","teamReportDailyData","classes","expanded","setExpanded","handleChange","panel","isExpanded","Accordion","AccordionSummary","expandIcon","aria-controls","Typography","city","name","AccordionDetails","map","i","details","drives","catchAndShoot","pullUpShooting","openThrees","contestedThrees","comment","join","min","pts","reb","ast","player_name","TabPanel","children","index","other","role","hidden","aria-labelledby","Box","p","a11yProps","flexGrow","backgroundColor","background","paper","height","tabs","borderRight","divider","VerticalTabs","awayTeamName","homeTeamName","homeTeamReport","awayTeamReport","homeTeamReportDaily","awayTeamReportDaily","setValue","Tabs","orientation","newValue","aria-label","Tab","BarGraphSingle","updateMetric","metric","setState","metricColumn","gotMetric","getMetricOption","option","state","metricUpdateVariable","metricKey","column_name","metricData","graph","dataset","split","last","pop","first","vertical","domainPadding","x","y","VictoryTheme","material","animate","duration","colorScale","labelComponent","fill","datum","greater","barRatio","dependentAxis","axis","stroke","tickLabels","lineHeight","ticks","grid","strokeDasharray","crossAxis","offsetX","key","nextProps","prevState","GameReport","handleDateChange","toISOString","axios","get","then","res","response","video_status","updateGame","game_id","gameReport","gotGameReport","score","gotScore","home_team_id","gotHomeTeamReportDaily","away_team_id","gotAwayTeamReportDaily","getGameOption","visitor_team_name","home_team_name","gameUpdateVariable","gameLabel","selectedStats","queryString","parse","location","search","Date","setDate","getDate","away_team_name","away_team_wins","away_team_losses","away_team_score","home_team_score","status","home_team_wins","home_team_losses","filter","team_id","BarGraphTotal","result","routeVariable","toString","substring","transformData","events","target","eventHandlers","evt","clickedProps","history","push","routeEndPoint","TeamReportPage","updateTeamId","disableCategory","teamReportTotal","gotTeamReportTotal","updateCategory","category","disableMetric","getTeamOption","getCategoryOption","teams","gotTeams","teamsLabel","teamUpdateVariable","categories","categoryUpdateVariable","categoryLabel","metricLabel","teamsSearchBar","categorySearchBar","metricSearchBar","teamReportGraph","graphInfo","PlayerReportPage","players","updatePlayerId","player_id","playerReportTotal","gotPlayerReportTotal","getPlayerOption","player","gotPlayers","playerUpdateVariable","playersLabel","playersSearchBar","playerReportGraph","Menu","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","Collapse","Nav","Link","App","exact","path","render","component","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a4e5152c.chunk.js","sourcesContent":["import 'date-fns';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\n//  Component to select the date for Game Reports\nexport default function MaterialUIPickers({date, onChangeDate}) {\n  const [selectedDate, setSelectedDate] = React.useState(date);\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n    onChangeDate(date)\n  };\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Grid container justify=\"space-around\">\n        <KeyboardDatePicker\n          disableToolbar\n          variant=\"inline\"\n          format=\"MM/dd/yyyy\"\n          margin=\"normal\"\n          id=\"date-picker-inline\"\n          label=\"Select Date\"\n          value={date}\n          onChange={handleDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n      </Grid>\n    </MuiPickersUtilsProvider>\n  );\n}\n","import React from 'react';\nimport { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {withRouter} from 'react-router-dom'\n\n\n// Search bar component to select metrics, teams, players, etc\nclass Search extends Component {\n\n    onChange = (event, values) => {\n        if (values){\n            this.props.updateFunction(values[this.props.updateVariable])\n        }\n        else {\n            this.props.updateFunction(null)\n        }\n    }\n    render (){\n        return (\n            <div>\n                <div>\n                    <Autocomplete\n                        id=\"combo-box-demo\"\n                        options={this.props.data}\n                        getOptionLabel={this.props.optionFunc}\n                        style={{ width: 300 }}\n                        defaultValue={this.props.defaultValue ? this.props.defaultValue : null}\n                        onChange={this.onChange}\n                        disabled={this.props.isDisabled}\n                        renderInput={(params) => <TextField {...params} label={this.props.label} variant=\"outlined\" />}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Search)\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport '../../css/style.css'\nimport { green, red } from '@material-ui/core/colors';\nimport Icon from '@material-ui/core/Icon';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport 'font-awesome/css/font-awesome.min.css';\nimport Search from '../search/Search'\n\nconst metric = {\n    'Drives': [\n        {'name' : 'Drives/G', 'column_name' : 'drives_diff'},\n        {'name' : 'Field Goals Made', 'column_name' : 'drive_fgm_diff'},\n        {'name' : 'Field Goals Attempted', 'column_name' : 'drive_fga_diff'},\n        {'name' : 'Points', 'column_name' : 'drive_pts_diff'},\n    ],\n    'Pull Up Shooting': [\n        {'name' : 'Field Goals Made', 'column_name' : 'pull_up_fgm_diff'},\n        {'name' : 'Field Goals Attempted', 'column_name' : 'pull_up_fga_diff'},\n        {'name' : 'Points', 'column_name' : 'pull_up_pts_diff'},\n        {'name' : 'Three Pointers Made', 'column_name' : 'pull_up_fg3m_diff'},\n        {'name' : 'Three Pointers Attempted', 'column_name' : 'pull_up_fg3a_diff'},\n    ],\n    'Catch and Shoot': [\n        {'name' : 'Field Goals Made', 'column_name' : 'catch_shoot_fgm_diff'},\n        {'name' : 'Field Goals Attempted', 'column_name' : 'catch_shoot_fga_diff'},\n        {'name' : 'Points', 'column_name' : 'catch_shoot_pts_diff'},\n        {'name' : 'Three Pointers Made', 'column_name' : 'catch_shoot_fg3m_diff'},\n        {'name' : 'Three Pointers Attempted', 'column_name' : 'catch_shoot_fg3a_diff'},\n    ],\n    'Open Three Pointers': [\n        {'name' : 'Three Pointers Points', 'column_name' : 'fg3_pts_diff_open'},\n        {'name' : 'Three Pointers Made', 'column_name' : 'fg3m_diff_open'},\n        {'name' : 'Three Pointers Attempted', 'column_name' : 'fg3a_diff_open'},\n    ],\n    'Contested Three Pointers': [\n        {'name' : 'Three Pointers Points', 'column_name' : 'fg3_pts_diff_tight'},\n        {'name' : 'Three Pointers Made', 'column_name' : 'fg3m_diff_tight'},\n        {'name' : 'Three Pointers Attempted', 'column_name' : 'fg3a_diff_tight'},\n    ]\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  header: {\n    display: 'flex',\n    width: '650px'\n  },\n  metricHeading: {\n    width:'130px'\n  }\n}));\n\nfunction getDrives(data, onClickMetric) {\n    // Drives\n    if (data.drives_diff > 0) {\n        return (<div class = 'metric-display clickable-metrics'  onClick={() => onClickMetric(\"Drives\", data)}>\n            <span>\n                Drives Per Game: +\n            </span>\n            <span class = 'positive-metric'>\n                {Number(data.drives_diff).toFixed(2)}\n            </span>\n            <div class = 'icon-up icon'>\n                <Icon\n                    className = \"fa fa-caret-up\"\n                />\n            </div>\n        </div>\n        )\n    }\n    else if (data.drives_diff < 0) {\n        return (<div class = 'metric-display clickable-metrics'  onClick={() => onClickMetric(\"Drives\", data)}>\n            <span>\n                Drives Per Game: -\n            </span>\n            <span class = 'negative-metric'>\n                {Math.abs(Number(data.drives_diff).toFixed(2))}\n            </span>\n            <div class = 'icon-down icon'>\n                <Icon\n                    className = \"fa fa-caret-down\"\n                />\n            </div>\n        </div>\n        )\n    }\n    else {\n        return (<div class = 'metric-display clickable-metrics'  onClick={() => onClickMetric(\"Drives\", data)}>\n            <span>\n                Drives Per Game:\n            </span>\n            <span>\n                {data.drives_diff}\n            </span>\n        </div>\n        )\n    }\n}\nfunction getCatchShoot(data, onClickMetric) {\n    if (data.catch_shoot_pts_diff > 0) {\n        return (<div class = 'metric-display clickable-metrics'  onClick={() => onClickMetric(\"Catch and Shoot\", data)}>\n            <span>\n                Catch and Shoot Points: +\n            </span>\n            <span class = 'positive-metric'>\n                {Number(data.catch_shoot_pts_diff).toFixed(2)}\n            </span>\n            <div class = 'icon-up icon'>\n                <Icon\n                    className = \"fa fa-caret-up\"\n                />\n            </div>\n        </div>\n        )\n    }\n    else if (data.catch_shoot_pts_diff < 0) {\n        return (<div class = 'metric-display clickable-metrics'  onClick={() => onClickMetric(\"Catch and Shoot\", data)}>\n            <span>\n                Catch and Shoot Points: -\n            </span>\n            <span class = 'negative-metric'>\n                {Math.abs(Number(data.catch_shoot_pts_diff).toFixed(2))}\n            </span>\n            <div class = 'icon-down icon'>\n                <Icon\n                    className = \"fa fa-caret-down\"\n                />\n            </div>\n        </div>\n        )\n    }\n    else {\n        return (<div class = 'metric-display clickable-metrics'  onClick={() => onClickMetric(\"Catch and Shoot\", data)}>\n            <span>\n                Catch and Shoot Points:\n            </span>\n            <span>\n                {data.catch_shoot_pts_diff}\n            </span>\n        </div>\n        )\n    }\n}\nfunction getPullUp(data, onClickMetric) {\n    // Pull Up Shooting\n    if (data.pull_up_pts_diff > 0) {\n        return (<div class = 'metric-display clickable-metrics'  onClick={() => onClickMetric(\"Pull Up Shooting\", data)}>\n            <span>\n                Pull Up Shooting Points: +\n            </span>\n            <span class = 'positive-metric'>\n                {Number(data.pull_up_pts_diff).toFixed(2)}\n            </span>\n            <div class = 'icon-up icon'>\n                <Icon\n                    className = \"fa fa-caret-up\"\n                />\n            </div>\n        </div>\n        )\n    }\n    else if (data.pull_up_pts_diff < 0) {\n        return (<div class = 'metric-display clickable-metrics'  onClick={() => onClickMetric(\"Pull Up Shooting\", data)}>\n            <span>\n                Pull Up Shooting Points: -\n            </span>\n            <span class = 'negative-metric'>\n                {Math.abs(Number(data.pull_up_pts_diff).toFixed(2))}\n            </span>\n            <div class = 'icon-down icon'>\n                <Icon\n                    className = \"fa fa-caret-down\"\n                />\n            </div>\n        </div>\n        )\n    }\n    else {\n        return (<div class = 'metric-display clickable-metrics'  onClick={() => onClickMetric(\"Pull Up Shooting\", data)}>\n            <span>\n                Pull Up Shooting Points:\n            </span>\n            <span>\n                {data.pull_up_pts_diff}\n            </span>\n        </div>\n        )\n    }\n}\nfunction getOpenThrees(data, onClickMetric) {\n    // Open Three Pointers\n    if (data.fg3_pts_diff_open > 0) {\n        return (<div class = 'metric-display clickable-metrics'  onClick={() => onClickMetric(\"Open Three Pointers\", data)}>\n            <span>\n                Open Three Pointers Points: +\n            </span>\n            <span class = 'positive-metric'>\n                {Number(data.fg3_pts_diff_open).toFixed(2)}\n            </span>\n            <div class = 'icon-up icon'>\n                <Icon\n                    className = \"fa fa-caret-up\"\n                />\n            </div>\n        </div>\n        )\n    }\n    else if (data.fg3_pts_diff_open < 0) {\n        return (<div class = 'metric-display clickable-metrics'  onClick={() => onClickMetric(\"Open Three Pointers\", data)}>\n            <span>\n                Open Three Pointers Points: -\n            </span>\n            <span class = 'negative-metric'>\n                {Math.abs(Number(data.fg3_pts_diff_open).toFixed(2))}\n            </span>\n            <div class = 'icon-down icon'>\n                <Icon\n                    className = \"fa fa-caret-down\"\n                />\n            </div>\n        </div>\n        )\n    }\n    else {\n        return (<div class = 'metric-display clickable-metrics'  onClick={() => onClickMetric(\"Open Three Pointers\", data)}>\n            <span>\n                Open Three Pointers Points:\n            </span>\n            <span>\n                {data.fg3_pts_diff_open}\n            </span>\n        </div>\n        )\n    }\n}\nfunction getContestedThrees(data, onClickMetric) {\n    // Contested Three Pointers\n    if (data.fg3_pts_diff_tight > 0) {\n        return (<div class = 'metric-display clickable-metrics'  onClick={() => onClickMetric(\"Contested Three Pointers\", data)}>\n            <span>\n                Contested Three Pointers Points: +\n            </span>\n            <span class = 'positive-metric'>\n                {Number(data.fg3_pts_diff_tight).toFixed(2)}\n            </span>\n            <div class = 'icon-up icon'>\n                <Icon\n                    className = \"fa fa-caret-up\"\n                />\n            </div>\n        </div>\n        )\n    }\n    else if (data.fg3_pts_diff_tight < 0) {\n        return (<div class = 'metric-display clickable-metrics'  onClick={() => onClickMetric(\"Contested Three Pointers\", data)}>\n            <span>\n                Contested Three Pointers Points: -\n            </span>\n            <span class = 'negative-metric'>\n                {Math.abs(Number(data.fg3_pts_diff_tight).toFixed(2))}\n            </span>\n            <div class = 'icon-down icon'>\n                <Icon\n                    className = \"fa fa-caret-down\"\n                />\n            </div>\n        </div>\n        )\n    }\n    else {\n        return (<div class = 'metric-display clickable-metrics'  onClick={() => onClickMetric(\"Contested Three Pointers\", data)}>\n            <span>\n                Contested Three Pointers Points: \n            </span>\n            <span>\n                {data.fg3_pts_diff_tight}\n            </span>\n        </div>\n        )\n    }\n}\n\n// Function to populate the accordion with the Box Score and Game Report for the Game Report Page\nexport default function ControlledAccordions({teamReportData, teamReportDailyData, onClickMetric}) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  return (\n    <div className={classes.root}>\n        <Accordion expanded = {expanded === 'panel0'} onChange={handleChange('panel0')}>\n            <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls={\"panel0bh-content\"}\n                id={\"panel0bh-header\"}\n            >\n                <Typography className={classes.heading}>{teamReportDailyData[0].city + ' ' + teamReportDailyData[0].name}</Typography>\n                <Typography className={classes.secondaryHeading}>Team Summary Report</Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n                <div class = 'accordion-content-container'>\n                    <div class = 'top-row accordion-content-row'>\n                        <div class = 'top-item accordion-content-item'>\n                            {getDrives(teamReportDailyData[0], onClickMetric)}\n                        </div>\n                        <div class = 'top-item accordion-content-item'>\n                            {getCatchShoot(teamReportDailyData[0], onClickMetric)}\n                        </div>\n                        <div class = 'top-item accordion-content-item'>\n                            {getPullUp(teamReportDailyData[0], onClickMetric)}\n                        </div>\n                    </div>\n                    <div class = 'accordion-content-row'>\n                        <div class = 'bottom-item accordion-content-item'>\n                            {getOpenThrees(teamReportDailyData[0], onClickMetric)}\n                        </div>\n                        <div class = 'bottom-item accordion-content-item'>\n                            {getContestedThrees(teamReportDailyData[0], onClickMetric)}\n                        </div>\n                    </div>\n                </div>\n            </AccordionDetails>\n        </Accordion>\n        {teamReportData.map((data, i) => {\n            let header, details;\n            if (data.comment) {\n                header = <Typography className={classes.secondaryHeading}>{data.comment}</Typography>\n                details = <div class = 'comment-details'>\n                    {data.comment}\n                </div>\n            }\n            else {\n                let drives, catchAndShoot, pullUpShooting, openThrees, contestedThrees;\n                drives = getDrives(data, onClickMetric);\n                // Catch and Shoot\n                catchAndShoot = getCatchShoot(data, onClickMetric);\n                pullUpShooting = getPullUp(data, onClickMetric);\n                openThrees = getOpenThrees(data, onClickMetric);\n                contestedThrees = getContestedThrees(data, onClickMetric);\n                header = <div className={classes.header}>\n                    <Typography className={[classes.secondaryHeading, classes.metricHeading].join(' ')}>Min: {data.min}</Typography>\n                    <Typography className={[classes.secondaryHeading, classes.metricHeading].join(' ')}>Points: {data.pts}</Typography>\n                    <Typography className={[classes.secondaryHeading, classes.metricHeading].join(' ')}>Rebounds: {data.reb}</Typography>\n                    <Typography className={[classes.secondaryHeading, classes.metricHeading].join(' ')}>Assists: {data.ast}</Typography>\n                </div>\n                details = <div class = 'accordion-content-container'>\n                    <div class = 'top-row accordion-content-row'>\n                        <div class = 'top-item accordion-content-item'>\n                            {drives}\n                        </div>\n                        <div class = 'top-item accordion-content-item'>\n                            {catchAndShoot}\n                        </div>\n                        <div class = 'top-item accordion-content-item'>\n                            {pullUpShooting}\n                        </div>\n                    </div>\n                    <div class = 'accordion-content-row'>\n                        <div class = 'bottom-item accordion-content-item'>\n                            {openThrees}\n                        </div>\n                        <div class = 'bottom-item accordion-content-item'>\n                            {contestedThrees}\n                        </div>\n                    </div>\n                </div>\n            }\n            return (\n                <Accordion expanded = {expanded === 'panel' + (i + 1)} onChange={handleChange('panel' + (i + 1))}>\n                    <AccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls={\"panel\" + (i + 1) + \"bh-content\"}\n                        id={\"panel\" + (i + 1) + \"bh-header\"}\n                    >\n                        <Typography className={classes.heading}>{data.player_name}</Typography>\n                        {header}\n                    </AccordionSummary>\n                    <AccordionDetails>\n                        {details}\n                    </AccordionDetails>\n                </Accordion>\n            )\n        })}\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Accordion from '../accordion/Accordion'\n\n// Tab Panel component for Game Reports\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    'aria-controls': `vertical-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    display: 'flex',\n    height: 224,\n  },\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n  },\n}));\n\nexport default function VerticalTabs({awayTeamName, homeTeamName, homeTeamReport, awayTeamReport, homeTeamReportDaily, awayTeamReportDaily, onClickMetric}) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  return (\n    <div className={classes.root}>\n      <Tabs\n        orientation=\"vertical\"\n        variant=\"scrollable\"\n        value={value}\n        onChange={handleChange}\n        aria-label=\"Vertical tabs example\"\n        className={classes.tabs}\n      >\n        <Tab label={awayTeamName} {...a11yProps(0)} />\n        <Tab label={homeTeamName} {...a11yProps(1)} />\n      </Tabs>\n      <TabPanel value={value} index={0}>\n          <div>\n            <Accordion\n              teamReportData = {awayTeamReport}\n              teamReportDailyData = {awayTeamReportDaily}\n              onClickMetric = {onClickMetric}\n            />\n          </div>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n          <div>\n            <Accordion\n              teamReportData = {homeTeamReport}\n              teamReportDailyData = {homeTeamReportDaily}\n              onClickMetric = {onClickMetric}\n            />\n          </div>\n      </TabPanel>\n    </div>\n  );\n}","import React from \"react\";\nimport { Component } from 'react';\nimport Search from '../search/Search'\n\nimport {\n    VictoryBar,\n    VictoryChart,\n    VictoryStack,\n    VictoryTheme,\n    VictoryLabel,\n    VictoryAxis,\n  } from \"victory\";\n\n// Class to plot bar graph when a category is click in the Game Report\nexport default class BarGraphSingle extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            metric : {\n                'Drives': [\n                    {'name' : 'Drives/G', 'column_name' : 'drives'},\n                    {'name' : 'Field Goals Made', 'column_name' : 'drive_fgm'},\n                    {'name' : 'Field Goals Attempted', 'column_name' : 'drive_fga'},\n                    {'name' : 'Points', 'column_name' : 'drive_pts'},\n                ],\n                'Pull Up Shooting': [\n                    {'name' : 'Points', 'column_name' : 'pull_up_pts'},\n                    {'name' : 'Field Goals Made', 'column_name' : 'pull_up_fgm'},\n                    {'name' : 'Field Goals Attempted', 'column_name' : 'pull_up_fga'},\n                    {'name' : 'Three Pointers Made', 'column_name' : 'pull_up_fg3m'},\n                    {'name' : 'Three Pointers Attempted', 'column_name' : 'pull_up_fg3a'},\n                ],\n                'Catch and Shoot': [\n                    {'name' : 'Points', 'column_name' : 'catch_shoot_pts'},\n                    {'name' : 'Field Goals Made', 'column_name' : 'catch_shoot_fgm'},\n                    {'name' : 'Field Goals Attempted', 'column_name' : 'catch_shoot_fga'},\n                    {'name' : 'Three Pointers Made', 'column_name' : 'catch_shoot_fg3m'},\n                    {'name' : 'Three Pointers Attempted', 'column_name' : 'catch_shoot_fg3a'},\n                ],\n                'Open Three Pointers': [\n                    {'name' : 'Three Pointers Points', 'column_name' : 'fg3_pts_open'},\n                    {'name' : 'Three Pointers Made', 'column_name' : 'fg3m_open'},\n                    {'name' : 'Three Pointers Attempted', 'column_name' : 'fg3a_open'},\n                ],\n                'Contested Three Pointers': [\n                    {'name' : 'Three Pointers Points', 'column_name' : 'fg3_pts_tight'},\n                    {'name' : 'Three Pointers Made', 'column_name' : 'fg3m_tight'},\n                    {'name' : 'Three Pointers Attempted', 'column_name' : 'fg3a_tight'},\n                ]\n            },\n            metricUpdateVariable : 'column_name',\n            metricKey : this.props.metricKey,\n        }\n    }\n\n    componentDidMount() {\n        this.setState({\n            gotMetric : true,\n            metricColumn : this.state.metric[this.props.metricKey][0].column_name,\n            metricKey : this.props.metricKey,\n            metricData : this.props.metricData,\n        })\n    }\n    static getDerivedStateFromProps(nextProps, prevState) {\n        if (nextProps.metricKey != prevState.metricKey) {\n            return {\n                metricKey : nextProps.metricKey,\n                metricColumn : prevState.metric[nextProps.metricKey][0].column_name,\n                metricData: nextProps.metricData\n            }\n        }\n        else {\n            return {\n                metricData: nextProps.metricData\n            }\n        }\n    }\n    updateMetric = (metric) => {\n        if (metric) {\n            this.setState ({\n                metricColumn : metric,\n                gotMetric : true,\n            })\n        }\n    }\n\n    getMetricOption = (option) => {\n        return (option.name)\n    }\n\n    render() {\n        let graph, dataset;\n        if (this.state.gotMetric) {\n            if (this.state.metricKey === 'Open Three Pointers' || this.state.metricKey === 'Contested Three Pointers'){\n                let split = this.state.metricColumn.split('_')\n                let last = split.pop()\n                let first = split.join('_')\n                dataset = [\n                    {\n                        'x' : 'Daily',\n                        'y' : this.state.metricData[first + '_daily_' + last],\n                        'label' : this.state.metricData[first + '_daily_' + last],\n                        'greater' : this.state.metricData[first + '_daily_' + last] > this.state.metricData[first + '_total_' + last] ? true : false\n                    },\n                    {\n                        'x' : 'Average',\n                        'y' : this.state.metricData[first + '_total_' + last],\n                        'label' : Number(this.state.metricData[first + '_total_' + last]).toFixed(2),\n                        'greater' : this.state.metricData[first + '_daily_' + last] < this.state.metricData[first + '_total_' + last] ? true : false\n                    }\n                ]\n            }\n            else {\n                dataset = [\n                    {\n                        'x' : 'Daily',\n                        'y' : this.state.metricData[this.state.metricColumn + '_daily'],\n                        'label' : this.state.metricData[this.state.metricColumn + '_daily'],\n                        'greater' : this.state.metricData[this.state.metricColumn + '_daily'] > this.state.metricData[this.state.metricColumn + '_total'] ? true : false\n                    },\n                    {\n                        'x' : 'Average',\n                        'y' : this.state.metricData[this.state.metricColumn + '_total'],\n                        'label' : Number(this.state.metricData[this.state.metricColumn + '_total']).toFixed(2),\n                        'greater' : this.state.metricData[this.state.metricColumn + '_daily'] < this.state.metricData[this.state.metricColumn + '_total'] ? true : false\n                    }\n                ]\n            }\n            graph = <div>\n                <div className=\"App\">\n                    <VictoryChart\n                        vertical\n                        height={300}\n                        width={200}\n                        domainPadding={{ x: 30, y: 20 }}\n                        theme={VictoryTheme.material}\n                        animate={{duration: 500}}\n                    >\n                        <VictoryStack colorScale={[\"black\"]}>\n                        <VictoryBar\n                            labelComponent={\n                                <VictoryLabel\n                                />\n                            }\n                            style = {{\n                                data : {\n                                    fill: ({datum}) => datum.greater ?  \"#0AE30A\" : \"#FF0000\"\n                                }\n                            }}\n                            data={dataset}\n                            barRatio = {0.8}\n                        />\n                        </VictoryStack>\n                        <VictoryAxis\n                        dependentAxis\n                        style={{\n                            axis: {\n                            stroke: \"none\"\n                            },\n                            tickLabels: {\n                            fontSize: 12,\n                            lineHeight: 18,\n                            color: \"red\"\n                            },\n                            ticks: {\n                            stroke: \"none\"\n                            },\n                            grid: {\n                                stroke: 'none',\n                            strokeDasharray: \"none\"\n                            }\n                        }}\n                        />\n                        <VictoryAxis\n                        crossAxis\n                        offsetX={50}\n                        style={{\n                            grid: {\n                                stroke: 'none'\n                            }\n                        }}\n                        />\n                    </VictoryChart>\n                </div>\n            </div>;\n        }\n        return (\n            <div key={this.props.metricKey}>\n                <div>\n                    <Search\n                    data = {this.state.metric[this.state.metricKey]}\n                    updateFunction = {this.updateMetric}\n                    updateVariable = {this.state.metricUpdateVariable}\n                    optionFunc = {this.getMetricOption}\n                    defaultValue = {this.state.metric[this.state.metricKey][0]}\n                    label = \"Select Metric\"\n                    />\n                </div>\n                <div>\n                    {graph}\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport MaterialUIPickers from '../../components/date/Date'\nimport queryString from 'query-string';\nimport axios from 'axios'\nimport { Component } from 'react';\nimport Search from '../../components/search/Search'\nimport '../../css/style.css'\nimport Tabs from '../../components/tabs/Tabs'\nimport BarGraphSingle from '../../components/bar_graph_single/BarGraphSingle'\n\n// Game Report Page\nexport default class GameReport extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            video_status: [],\n            gameUpdateVariable : 'game_id',\n            gameLabel : 'Select Game',\n            game_id : null,\n            gameReport : [],\n            gotGameReport : false,\n            score : [],\n            gotScore : false,\n            homeTeamReportDaily : [],\n            gotHomeTeamReportDaily : false,\n            awayTeamReportDaily : [],\n            gotAwayTeamReportDaily : false,\n            selectedStats : null,\n        }\n    }\n\n    componentDidMount() {\n        const values = queryString.parse(this.props.location.search)\n        let date = null\n        date = new Date()\n        date.setDate(date.getDate() - 1);\n        this.setState({\n            date: date\n        })\n        axios.get('/api/v1/get-video-status?date=' + date.toISOString().split('T')[0]).then((res) => {\n            const response = res.data;\n            this.setState({video_status : response});\n        });\n        if (values.game_id && values.date) {\n            this.setState({\n                date: new Date(Date.parse(values.date))\n            })\n            this.updateGame(values.game_id)\n        }\n    }\n\n    handleDateChange = (date) => {\n        this.setState({\n            date: date\n        })\n        date = date.toISOString().split('T')[0]\n        axios.get('/api/v1/get-video-status?date=' + date).then((res) => {\n            const response = res.data;\n            this.setState({video_status : response});\n        });\n    }\n\n    updateGame = (game_id) => {\n        if (game_id){\n            this.setState({\n                game_id : game_id\n            })\n            axios.get('/api/v1/get-game-report?game_id=' + game_id).then((res) => {\n                const response = res.data;\n                this.setState({\n                    gameReport : response,\n                    gotGameReport : true\n                });\n            });\n            axios.get('/api/v1/get-score?game_id=' + game_id).then((res) => {\n                let date = this.state.date.toISOString().split('T')[0]\n                const response = res.data;\n                this.setState({\n                    score : response,\n                    gotScore: true\n                });\n                axios.get('/api/v1/get-team-report-daily?team_id=' + response[0].home_team_id + '&date=' + date).then((res) => {\n                    const response = res.data;\n                    this.setState({\n                        homeTeamReportDaily : response,\n                        gotHomeTeamReportDaily: true\n                    });\n                });\n                axios.get('/api/v1/get-team-report-daily?team_id=' + response[0].away_team_id + '&date=' + date).then((res) => {\n                    const response = res.data;\n                    this.setState({\n                        awayTeamReportDaily : response,\n                        gotAwayTeamReportDaily: true\n                    });\n                });\n            });\n        }\n    }\n\n    getGameOption = (option) => {\n        return (option.visitor_team_name + ' at ' + option.home_team_name)\n    }\n\n    onClickMetric = (metricKey, data) => {\n        this.setState({\n            metricKey : metricKey,\n            metricData : data\n        })\n    }\n    render (){\n        let score, tabs, homeTeamReport, awayTeamReport, selectedStats;\n        if (this.state.gotScore) {\n            score = <div class = 'score-container'>\n                <div class = 'team-wrapper'>\n                    <div class = 'team-details'>\n                        <div class = 'team-name'>\n                            <h3>{this.state.score[0].away_team_name}</h3>\n                        </div>\n                        <div class = 'record'>\n                            <h6>{this.state.score[0].away_team_wins} - {this.state.score[0].away_team_losses}</h6>\n                        </div>\n                    </div>\n                    <div class = 'team-score'>\n                            <h2 style={{ ...this.state.score[0].away_team_score > this.state.score[0].home_team_score ? {'font-weight':'bold'}: {}}}>{this.state.score[0].away_team_score}</h2>\n                    </div>\n                </div>\n                <div class = 'game-status'>\n                    {this.state.score[0].status}\n                </div>\n                <div class = 'team-wrapper'>\n                    <div class = 'team-score'>\n                        <h2 style={{ ...this.state.score[0].home_team_score > this.state.score[0].away_team_score ? {'font-weight':'bold'}: {}}}>{this.state.score[0].home_team_score}</h2>\n                    </div>\n                    <div class = 'team-details'>\n                        <div class = 'team-name'>\n                            <h3>{this.state.score[0].home_team_name}</h3>\n                        </div>\n                        <div class = 'record'>\n                            <h6>{this.state.score[0].home_team_wins} - {this.state.score[0].home_team_losses}</h6>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        }\n        if (this.state.gotGameReport && this.state.gotScore && this.state.gotHomeTeamReportDaily && this.state.gotAwayTeamReportDaily) {\n            homeTeamReport = this.state.gameReport.filter(data => data.team_id == this.state.score[0].home_team_id)\n            awayTeamReport = this.state.gameReport.filter(data => data.team_id == this.state.score[0].away_team_id)\n            tabs = <Tabs awayTeamName = {this.state.score[0].away_team_name} homeTeamName = {this.state.score[0].home_team_name} homeTeamReport = {homeTeamReport} awayTeamReport = {awayTeamReport} homeTeamReportDaily = {this.state.homeTeamReportDaily} awayTeamReportDaily = {this.state.awayTeamReportDaily} onClickMetric = {this.onClickMetric}></Tabs>\n        }\n        if (this.state.metricKey) {\n            selectedStats = <BarGraphSingle\n                metricKey = {this.state.metricKey}\n                metricData = {this.state.metricData}\n            />\n        }\n        return (\n            <div class = 'main-container'>\n                <div class = 'game-filters-container filters-container'>\n                    <div class = 'game-selector'>\n                        <h1>\n                            Game Report\n                        </h1>\n                    </div>\n                    <div>\n                        <MaterialUIPickers date = {this.state.date} onChangeDate = {this.handleDateChange}></MaterialUIPickers>\n                    </div>\n                    <br/>\n                    <div class = 'game-selector'>\n                        <Search data = {this.state.video_status} updateFunction = {this.updateGame} updateVariable = {this.state.gameUpdateVariable} optionFunc = {this.getGameOption} label = {this.state.gameLabel}></Search>\n                    </div>\n                    <div class = 'select-stats-container'>\n                        {selectedStats}\n                    </div>\n                </div>\n                <div class = 'game-report-container report-container'>\n                        <div class = 'score'>\n                            {score}\n                        </div>\n                        <br/>\n                        <div class = 'accordion-game-report'>\n                            {tabs}\n                        </div>\n                </div>\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport { Component } from 'react';\nimport {withRouter} from 'react-router-dom'\n\nimport {\n    VictoryBar,\n    VictoryChart,\n    VictoryStack,\n    VictoryTheme,\n    VictoryAxis,\n    VictoryTooltip\n  } from \"victory\";\n\n// Class to plot Bar Graphs for Team and Player Reports\nclass BarGraphTotal extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    transformData(dataset) {\n        return dataset.map((data) => {\n            let label = '', result, routeVariable;\n            if (data.team_id == data.home_team_id) {\n                label += 'vs ' + data.away_team_name;\n                if (data.home_team_score > data.away_team_score) {\n                    label += '\\nResult: W';\n                    result = true;\n                }\n                else {\n                    label += '\\nResult: L';\n                    result = false;\n                }\n            }\n            else{\n                label += '@ ' + data.home_team_name\n                if (data.home_team_score > data.away_team_score) {\n                    label += '\\nResult: L';\n                    result = false;\n                }\n                else {\n                    label += '\\nResult: W';\n                    result = true;\n                }\n            }\n            if (this.props.routeVariable == 'game_id') {\n                routeVariable = data[this.props.routeVariable].toString().substring(0,2) == '00' ? data[this.props.routeVariable] : '00' + data[this.props.routeVariable]\n            }\n            return {'x' : data.date, 'y' : data[this.props.metric], 'label' : label, 'result': result, [this.props.routeVariable]: routeVariable}\n        })\n    }\n    render() {\n        const dataset = this.transformData(this.props.dataset)\n        return (\n            <div>\n                <div className=\"App\">\n                    <VictoryChart\n                        vertical\n                        height={250}\n                        width={500}\n                        domainPadding={{ x: 30, y: 20 }}\n                        theme={VictoryTheme.material}\n                        animate={{duration: 500}}\n                    >\n                        <VictoryStack colorScale={[\"black\"]}>\n                        <VictoryBar\n                            labelComponent={\n                                <VictoryTooltip/>\n                            }\n                            style = {{\n                                data : {\n                                    fill: ({datum}) => datum.result ?  \"#0AE30A\" : \"#FF0000\"\n                                }\n                            }}\n                            data={dataset}\n                            barRatio = {0.6}\n                            events={[\n                                {\n                                    target : 'data',\n                                    eventHandlers : {\n                                        onClick: (evt, clickedProps) => {\n                                            this.props.history.push('/' + this.props.routeEndPoint + '?' + this.props.routeVariable + '=' + clickedProps.datum[this.props.routeVariable] + '&date=' + clickedProps.datum.x)\n                                        }\n                                    }\n                                }\n                            ]}\n                        />\n                        </VictoryStack>\n                        <VictoryAxis\n                        dependentAxis\n                        style={{\n                            axis: {\n                            stroke: \"none\"\n                            },\n                            tickLabels: {\n                            fontSize: 12,\n                            lineHeight: 18,\n                            color: \"red\"\n                            },\n                            ticks: {\n                            stroke: \"none\"\n                            },\n                            grid: {\n                            strokeDasharray: \"none\"\n                            }\n                        }}\n                        />\n                    </VictoryChart>\n                    </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(BarGraphTotal)","import React from 'react';\nimport { Component } from 'react';\nimport axios from 'axios'\nimport '../../css/style.css'\nimport Search from '../../components/search/Search'\nimport BarGraphTotal from '../../components/bar_graph_total/BarGraphTotal'\n\n// Team Report Page\nexport default class TeamReportPage extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            team_id : null,\n            teams : [],\n            gotTeams : false,\n            teamsLabel: \"Select Team\",\n            teamUpdateVariable : 'team_id',\n            disableCategory: true,\n            categories: [\n                {'name' : 'Drives'},\n                {'name' : 'Pull Up Shooting'},\n                {'name' : 'Catch and Shoot'},\n                {'name' : 'Open Three Pointers'},\n                {'name' : 'Contested Three Pointers'}\n            ],\n            category : null,\n            categoryUpdateVariable : 'name',\n            metric : {\n                'Drives': [\n                    {'name' : 'Drives/G', 'column_name' : 'drives_diff'},\n                    {'name' : 'Field Goals Made', 'column_name' : 'drive_fgm_diff'},\n                    {'name' : 'Field Goals Attempted', 'column_name' : 'drive_fga_diff'},\n                    {'name' : 'Points', 'column_name' : 'drive_pts_diff'},\n                ],\n                'Pull Up Shooting': [\n                    {'name' : 'Field Goals Made', 'column_name' : 'pull_up_fgm_diff'},\n                    {'name' : 'Field Goals Attempted', 'column_name' : 'pull_up_fga_diff'},\n                    {'name' : 'Points', 'column_name' : 'pull_up_pts_diff'},\n                    {'name' : 'Three Pointers Made', 'column_name' : 'pull_up_fg3m_diff'},\n                    {'name' : 'Three Pointers Attempted', 'column_name' : 'pull_up_fg3a_diff'},\n                ],\n                'Catch and Shoot': [\n                    {'name' : 'Field Goals Made', 'column_name' : 'catch_shoot_fgm_diff'},\n                    {'name' : 'Field Goals Attempted', 'column_name' : 'catch_shoot_fga_diff'},\n                    {'name' : 'Points', 'column_name' : 'catch_shoot_pts_diff'},\n                    {'name' : 'Three Pointers Made', 'column_name' : 'catch_shoot_fg3m_diff'},\n                    {'name' : 'Three Pointers Attempted', 'column_name' : 'catch_shoot_fg3a_diff'},\n                ],\n                'Open Three Pointers': [\n                    {'name' : 'Three Pointers Points', 'column_name' : 'fg3_pts_diff_open'},\n                    {'name' : 'Three Pointers Made', 'column_name' : 'fg3m_diff_open'},\n                    {'name' : 'Three Pointers Attempted', 'column_name' : 'fg3a_diff_open'},\n                ],\n                'Contested Three Pointers': [\n                    {'name' : 'Three Pointers Points', 'column_name' : 'fg3_pts_diff_tight'},\n                    {'name' : 'Three Pointers Made', 'column_name' : 'fg3m_diff_tight'},\n                    {'name' : 'Three Pointers Attempted', 'column_name' : 'fg3a_diff_tight'},\n                ]\n            },\n            categoryLabel : \"Select Category\",\n            disableMetric : true,\n            metricLabel : \"Select Metric\",\n            metricUpdateVariable : 'column_name',\n            metricColumn : null,\n            gotMetric : false,\n            gotTeamReportTotal : false,\n            routeVariable : 'game_id',\n            routeEndPoint : 'game-report'\n        }\n    }\n\n    componentDidMount() {\n        axios.get('/api/v1/get-teams').then((res) => {\n            const response = res.data;\n            this.setState({\n                teams : response,\n                gotTeams : true\n            });\n        });\n    }\n\n    updateTeamId = (team_id) => {\n        if (team_id) {\n            this.setState({\n                team_id : team_id,\n                disableCategory: false\n            })\n            axios.get('/api/v1/get-team-report-total?team_id=' + team_id).then((res) => {\n                const response = res.data;\n                this.setState({\n                    teamReportTotal : response,\n                    gotTeamReportTotal : true\n                });\n            });\n        }\n    }\n\n    updateCategory = (category) => {\n        if (category) {\n            this.setState({\n                category: category,\n                disableMetric : false\n            })\n        }\n    }\n\n    updateMetric = (metric) => {\n        if (metric) {\n            this.setState ({\n                metricColumn : metric,\n                gotMetric : true\n            })\n        }\n    }\n\n    getTeamOption = (option) =>{\n        return (option.city + ' ' + option.name)\n    }\n\n    getCategoryOption = (option) => {\n        return (option.name)\n    }\n\n    getMetricOption = (option) => {\n        return (option.name)\n    }\n\n    render () {\n        let teamsSearchBar, categorySearchBar, metricSearchBar, metricData = [], teamReportGraph, graphInfo;\n        if (this.state.category) {\n            metricData = this.state.metric[this.state.category];\n        }\n        if (this.state.gotTeams) {\n            teamsSearchBar = <Search data = {this.state.teams} updateFunction = {this.updateTeamId} updateVariable = {this.state.teamUpdateVariable} optionFunc = {this.getTeamOption} label = {this.state.teamsLabel}></Search>\n            categorySearchBar = <Search data = {this.state.categories} updateFunction = {this.updateCategory} updateVariable = {this.state.categoryUpdateVariable} isDisabled = {this.state.disableCategory} optionFunc = {this.getCategoryOption} label = {this.state.categoryLabel}></Search>\n            metricSearchBar = <Search data = {metricData} updateFunction = {this.updateMetric} updateVariable = {this.state.metricUpdateVariable} isDisabled = {this.state.disableMetric} optionFunc = {this.getMetricOption} label = {this.state.metricLabel}></Search>\n            graphInfo =  <div class = 'graph-info'>\n                <em>- Green bars are wins</em><br/>\n                <em>- Red bars are losses</em><br/>\n                <em>- Click bars to view Game Reports</em>\n            </div>\n        }\n        if (this.state.gotTeamReportTotal && this.state.gotMetric) {\n            teamReportGraph = <BarGraphTotal\n                dataset = {this.state.teamReportTotal}\n                metric = {this.state.metricColumn}\n                routeVariable = {this.state.routeVariable}\n                routeEndPoint = {this.state.routeEndPoint}\n            />\n        }\n        return(\n                <div class = 'main-container'>\n                    <div class = 'filters-container'>\n                        <div>\n                            <h1>Team Report</h1>\n                        </div>\n                        <br/>\n                        <div>\n                            {teamsSearchBar}\n                        </div>\n                        <br/>\n                        <div>\n                            {categorySearchBar}\n                        </div>\n                        <br/>\n                        <div>\n                            {metricSearchBar}\n                        </div>\n                        <br/>\n                        {graphInfo}\n                    </div>\n                    <div class = 'report-container'>\n                        {teamReportGraph}\n                    </div>\n                </div>\n        )\n    }\n}","import React from 'react';\nimport { Component } from 'react';\nimport axios from 'axios'\nimport '../../css/style.css'\nimport Search from '../../components/search/Search'\nimport BarGraphTotal from '../../components/bar_graph_total/BarGraphTotal'\n\n// Player Report Page\nexport default class PlayerReportPage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            teams : [],\n            gotTeams : false,\n            teamUpdateVariable : 'team_id',\n            teamsLabel: \"Filter Players by Team\",\n            team_id : -1,\n            players : [],\n            gotPlayers : false,\n            playerUpdateVariable : 'player_id',\n            playersLabel : 'Select Player',\n            player_id : null,\n            playerReportTotal : [],\n            gotPlayerReportTotal : false,\n            disableCategory: true,\n            categories: [\n                {'name' : 'Drives'},\n                {'name' : 'Pull Up Shooting'},\n                {'name' : 'Catch and Shoot'},\n                {'name' : 'Open Three Pointers'},\n                {'name' : 'Contested Three Pointers'}\n            ],\n            category : null,\n            categoryUpdateVariable : 'name',\n            metric : {\n                'Drives': [\n                    {'name' : 'Drives/G', 'column_name' : 'drives_diff'},\n                    {'name' : 'Field Goals Made', 'column_name' : 'drive_fgm_diff'},\n                    {'name' : 'Field Goals Attempted', 'column_name' : 'drive_fga_diff'},\n                    {'name' : 'Points', 'column_name' : 'drive_pts_diff'},\n                ],\n                'Pull Up Shooting': [\n                    {'name' : 'Field Goals Made', 'column_name' : 'pull_up_fgm_diff'},\n                    {'name' : 'Field Goals Attempted', 'column_name' : 'pull_up_fga_diff'},\n                    {'name' : 'Points', 'column_name' : 'pull_up_pts_diff'},\n                    {'name' : 'Three Pointers Made', 'column_name' : 'pull_up_fg3m_diff'},\n                    {'name' : 'Three Pointers Attempted', 'column_name' : 'pull_up_fg3a_diff'},\n                ],\n                'Catch and Shoot': [\n                    {'name' : 'Field Goals Made', 'column_name' : 'catch_shoot_fgm_diff'},\n                    {'name' : 'Field Goals Attempted', 'column_name' : 'catch_shoot_fga_diff'},\n                    {'name' : 'Points', 'column_name' : 'catch_shoot_pts_diff'},\n                    {'name' : 'Three Pointers Made', 'column_name' : 'catch_shoot_fg3m_diff'},\n                    {'name' : 'Three Pointers Attempted', 'column_name' : 'catch_shoot_fg3a_diff'},\n                ],\n                'Open Three Pointers': [\n                    {'name' : 'Three Pointers Points', 'column_name' : 'fg3_pts_diff_open'},\n                    {'name' : 'Three Pointers Made', 'column_name' : 'fg3m_diff_open'},\n                    {'name' : 'Three Pointers Attempted', 'column_name' : 'fg3a_diff_open'},\n                ],\n                'Contested Three Pointers': [\n                    {'name' : 'Three Pointers Points', 'column_name' : 'fg3_pts_diff_tight'},\n                    {'name' : 'Three Pointers Made', 'column_name' : 'fg3m_diff_tight'},\n                    {'name' : 'Three Pointers Attempted', 'column_name' : 'fg3a_diff_tight'},\n                ]\n            },\n            categoryLabel : \"Select Category\",\n            disableMetric : true,\n            metricLabel : \"Select Metric\",\n            metricUpdateVariable : 'column_name',\n            metricColumn : null,\n            gotMetric : false,\n            gotPlayerReportTotal : false,\n            routeVariable : 'game_id',\n            routeEndPoint : 'game-report'\n        }\n    }\n\n    componentDidMount() {\n        axios.get('/api/v1/get-teams').then((res) => {\n            const response = res.data;\n            this.setState({\n                teams : response,\n                gotTeams : true\n            });\n        });\n        axios.get('/api/v1/get-players?team_id=' + this.state.team_id).then((res) => {\n            const response = res.data;\n            this.setState({\n                players : response,\n                gotPlayers : true\n            });\n        });\n    }\n\n    updateTeamId = (team_id) => {\n        if (team_id == null) {\n            team_id = -1\n        }\n        axios.get('/api/v1/get-players?team_id=' + team_id).then((res) => {\n            const response = res.data;\n            this.setState({\n                players : response,\n            });\n        });\n        this.setState({\n            team_id : team_id\n        })\n    }\n\n    updateCategory = (category) => {\n        if (category) {\n            this.setState({\n                category: category,\n                disableMetric : false\n            })\n        }\n    }\n\n    updateMetric = (metric) => {\n        if (metric) {\n            this.setState ({\n                metricColumn : metric,\n                gotMetric : true\n            })\n        }\n    }\n\n    getTeamOption = (option) =>{\n        return (option.city + ' ' + option.name)\n    }\n\n    updatePlayerId = (player_id) => {\n        this.setState({\n            player_id : player_id,\n            disableCategory : false\n        })\n        axios.get('/api/v1/get-player-report-total?player_id=' + player_id).then((res) => {\n            const response = res.data;\n            this.setState({\n                playerReportTotal : response,\n                gotPlayerReportTotal : true\n            });\n        });\n    }\n\n    getPlayerOption = (option) => {\n        return (option.player)\n    }\n\n    getCategoryOption = (option) => {\n        return (option.name)\n    }\n\n    getMetricOption = (option) => {\n        return (option.name)\n    }\n    render () {\n        let playersSearchBar, teamsSearchBar, playerReportGraph, categorySearchBar, metricSearchBar, metricData = [];\n        if (this.state.category) {\n            metricData = this.state.metric[this.state.category];\n        }\n        if (this.state.gotTeams && this.state.gotPlayers) {\n            teamsSearchBar = <Search data = {this.state.teams} updateFunction = {this.updateTeamId} updateVariable = {this.state.teamUpdateVariable} optionFunc = {this.getTeamOption} label = {this.state.teamsLabel}></Search>\n            playersSearchBar = <Search data = {this.state.players} updateFunction = {this.updatePlayerId} updateVariable = {this.state.playerUpdateVariable} optionFunc = {this.getPlayerOption} label = {this.state.playersLabel}></Search>\n            categorySearchBar = <Search data = {this.state.categories} updateFunction = {this.updateCategory} updateVariable = {this.state.categoryUpdateVariable} isDisabled = {this.state.disableCategory} optionFunc = {this.getCategoryOption} label = {this.state.categoryLabel}></Search>\n            metricSearchBar = <Search data = {metricData} updateFunction = {this.updateMetric} updateVariable = {this.state.metricUpdateVariable} isDisabled = {this.state.disableMetric} optionFunc = {this.getMetricOption} label = {this.state.metricLabel}></Search>\n        }\n        if (this.state.gotPlayerReportTotal && this.state.gotMetric) {\n            playerReportGraph = <BarGraphTotal\n                dataset = {this.state.playerReportTotal}\n                metric = {this.state.metricColumn}\n                routeVariable = {this.state.routeVariable}\n                routeEndPoint = {this.state.routeEndPoint}\n            />\n        }\n        return (\n            <div class = 'main-container'>\n                <div class = 'filters-container'>\n                    <div>\n                        <h1>Player Report</h1>\n                    </div>\n                    <br/>\n                    <div>\n                        {playersSearchBar}\n                    </div>\n                    <br/>\n                    <div>\n                        {teamsSearchBar}\n                    </div>\n                    <br/>\n                    <div>\n                        {categorySearchBar}\n                    </div>\n                    <br/>\n                    <div>\n                        {metricSearchBar}\n                    </div>\n                    <br/>\n                    <div class = 'graph-info'>\n                        <em>- Green bars are wins</em><br/>\n                        <em>- Red bars are losses</em><br/>\n                        <em>- Click bars to view Game Reports</em>\n                    </div>\n                </div>\n                <div class = 'report-container'>\n                    {playerReportGraph}\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Navbar, Nav, Container } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport '../../css/style.css'\n\n// Navbar Component\nconst Menu = () => {\n  return (\n    <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect>\n      <Container>\n      <LinkContainer to='/'>\n          <Navbar.Brand>Brooklyn Nets</Navbar.Brand>\n        </LinkContainer>\n        <Navbar.Toggle aria-controls='basic-navbar-nav' />\n        <Navbar.Collapse id='basic-navbar-nav'>\n          <Nav className='mr-auto'>\n          <LinkContainer to='/game-report'>\n              <Nav.Link>Game Reports</Nav.Link>\n            </LinkContainer>\n            <LinkContainer to='/player-report'>\n              <Nav.Link>Player Reports</Nav.Link>\n            </LinkContainer>\n            <LinkContainer to='/team-report'>\n              <Nav.Link>Team Reports</Nav.Link>\n            </LinkContainer>\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  )\n}\n\nexport default Menu","import React, { Component } from 'react';\nimport './css/App.css';\nimport GameReport from './pages/game_report_page/GameReportPage'\nimport TeamReportPage from './pages/team_report_page/TeamReportPage'\nimport PlayerReportPage from './pages/player_report_page/PlayerReportPage'\nimport Menu from './components/menu/Menu'\nimport axios from 'axios'\nimport { Container } from 'react-bootstrap'\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\n\n// class App extends Component {\n//   state = {\n//     response: {}\n//   };\n\n//   componentDidMount() {\n//     axios.get('/api/v1/say-something').then((res) => {\n//       const response = res.data;\n//       this.setState({response});\n//     });\n//   }\n\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <h1>Here is our new feature!</h1>\n//         <h1>{this.state.response.body}</h1>\n//         <MaterialUIPickers/>\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n\nconst App = () => {\n  return (\n    <Router>\n      <Menu/>\n      <main>\n        <Container>\n          <Switch>\n            <Route\n              exact\n              path = '/'\n              render = {() => {\n                return (\n                  <Redirect to='/game-report'/>\n                )\n              }}\n            />\n            <Route exact path='/game-report/' component={GameReport} />\n            <Route exact path='/team-report/' component={TeamReportPage} />\n            <Route exact path='/player-report/' component={PlayerReportPage} />\n          </Switch>\n        </Container>\n      </main>\n    </Router>\n  )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}